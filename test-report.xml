<?xml version="1.0" ?>
<testsuites>
	<testsuite name="pytest" errors="0" failures="1" skipped="1" tests="48" time="0.471" timestamp="2022-08-23T19:05:14.986737" hostname="playground">
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_create_api_with_debug" time="0.001"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_create_api_with_env" time="0.001"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_deregister_identity_json" time="0.003"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_deregister_identity_msgpack" time="0.001">
			<skipped type="pytest.xfail" message=""/>
		</testcase>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_is_identity_registered" time="0.002"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_is_identity_registered_fails" time="0.002"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_register_identity_json" time="0.002"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_register_identity_msgpack" time="0.002"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_send_json" time="0.002"/>
		<testcase classname="tests.test_ubirch_api.TestUbirchAPI" name="test_send_msgpack" time="0.002"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_create_keystore" time="0.001"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_create_new_keypair" time="0.004"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_do_not_create_duplicate" time="0.005"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_exists_signing_key" time="0.004"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_exists_signing_key_fails" time="0.002"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_exists_verifying_key" time="0.004"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_exists_verifying_key_fails" time="0.002"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_get_certificate" time="0.004"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_get_certificate_fails" time="0.002"/>
		<testcase classname="tests.test_ubirch_ks.TestUbirchKeyStore" name="test_keystore_is_saved" time="0.006"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_create_chained_message_with_hash" time="0.002"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_create_chained_messages" time="0.005"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_create_signed_message" time="0.002"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_create_signed_message_with_hash" time="0.002"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_reset_saved_signatures" time="0.002"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_set_saved_signatures" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_set_saved_signatures_changed" time="0.002"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_set_saved_signatures_unchanged" time="0.002"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_sign_not_implemented" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_unpack_legacy_trackle_message" time="0.001">
			<failure message="Exception: invalid input">self = &lt;tests.test_ubirch_protocol.TestUbirchProtocol testMethod=test_unpack_legacy_trackle_message&gt;

    def test_unpack_legacy_trackle_message(self):
        loc = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))
    
        with open(os.path.join(loc, &quot;v0.4-trackle-production.mpack&quot;), &quot;rb&quot;) as f:
            message = f.read()
    
        class ProtocolNoVerify(ubirch.Protocol):
            def _verify(self, uuid: UUID, message: bytes, signature: bytes) -&gt; bytes:
                pass
    
        p = ProtocolNoVerify()
&gt;       unpacked = p.message_verify(message)

tests/test_ubirch_protocol.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;tests.test_ubirch_protocol.TestUbirchProtocol.test_unpack_legacy_trackle_message.&lt;locals&gt;.ProtocolNoVerify object at 0x7fdfc8131f60&gt;
message = b'\x96\xcd\x00\x13\xb0\xaf\x93\x1b\x05\xac\xcau\x8b\xc2\xaa\xeb\x98\xd6\xf93)\xda\x00@\xf2\x17\x946\x83r\x01{C\x87\xf8...x7f\xa2t0\xad,\x15\x92LN6?\x00\xc0\xbb81\x97\x1b\x84tZ\xfa6\xc7\xaf\xdeBr/\xb9\x92\x06\xd8&lt;\xb5\xf3\x04\x83O\xf4g?\x00'

    def message_verify(self, message: bytes) -&gt; list:
        &quot;&quot;&quot;
        Verify the integrity of the message and decode the contents.
        Throws an exception if the message is not verifiable.
        :param message: the msgpack encoded message
        :return: the decoded message
        &quot;&quot;&quot;
        if len(message) &lt; 70:
            raise Exception(&quot;message format wrong (size &lt; 70 bytes): {}&quot;.format(len(message)))
    
        if message[1] &gt;&gt; 4 == 2:  # version 2
            legacy = False
        elif message[1] &gt;&gt; 4 == 1:  # version 1 (legacy)
            legacy = True
        else:
&gt;           raise Exception(&quot;invalid input&quot;)
E           Exception: invalid input

ubirch/ubirch_protocol.py:200: Exception</failure>
		</testcase>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_unpack_register_v1" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_verify_chained_messages" time="0.014"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_verify_fails_missing_data" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_verify_not_implemented" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol.TestUbirchProtocol" name="test_verify_signed_message" time="0.006"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_create_chained_message_with_hash" time="0.005"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_create_chained_messages" time="0.013"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_create_signed_message" time="0.005"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_create_signed_message_with_hash" time="0.005"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_sign_not_implemented" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_verify_chained_messages" time="0.010"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_verify_fails_missing_data" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_verify_not_implemented" time="0.001"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolECDSA" name="test_verify_signed_message" time="0.004"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolSIM" name="test_verify_registration_message_sim_v1" time="0.004"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolSIM" name="test_verify_registration_message_sim_v2" time="0.004"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolSIM" name="test_verify_signed_message_sim_v1" time="0.004"/>
		<testcase classname="tests.test_ubirch_protocol_ecdsa.TestUbirchProtocolSIM" name="test_verify_signed_message_sim_v2" time="0.004"/>
	</testsuite>
</testsuites>

